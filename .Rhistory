mat4<- c(0, 0, NA, 0.00001, 80, 1) #assign 0 to NA
na.mat4<-matrix(mat4, ncol=3, byrow=TRUE) #transf to matrix
n01<- reclassify(nceas, na.mat4)  #apply to raster to reclassify pixels to NA or 1 to make a mask
quantile(nceas)
nceas <- raster("../bigFiles/nceas_wgs.tif")
rm(list=ls(all=TRUE))
library(dplyr)
library(rgdal)
library(ggplot2)
library(raster)
# set working directory
setwd("~elahi/github/marBiodivChange_impacts/")
# Load data table of impact scores from Ginger Allington
siteList <- read.csv("./data/elahi_extractedVals.csv")
unique(siteList$studyName)
# Need to remove large-scale studies that were not used in the CB analysis
sl2 <- siteList[siteList$studyName != "Keller" &
siteList$studyName != "Bebars" &
siteList$studyName != "Greenwood" &
siteList$studyName != "Sonnewald" &
siteList$studyName != "SwedFishTrawl"  , ]
unique(sl2$studyName)
# Categorize impact score or not, rename and select columns
sl2$impact <- with(sl2, ifelse(Impact.Score == -9999, "no", "yes"))
head(sl2)
sl3 <- sl2 %>% rename(Long = Long_, impactScore = Impact.Score,
originalID = OBJECTID..) %>%
dplyr::select(originalID, studyName, Lat, Long, impactScore, impact)
head(sl3)
# write.csv(sl3, './data/elahi_cb_sites.csv')
###############################
###############################
# First order of business, as proof of concept
# Can I replicate Ginger's extracted scores?
head(sl3)
with(sl3, table(impact))
# 62 sites did not get an impact score, because
# the points were on land or data were NA
# remove these 62
sl4 <- sl3 %>% filter(impact == "yes")
summary(sl4)
# rename file
pointsObject <- sl4
head(pointsObject)
# set spatial coordinates to create a spatial object
# c(x, y) i.e.,  c(long, lat)
coordinates(pointsObject) <- c("Long", "Lat")
pointsObject
head(pointsObject)
str(pointsObject)
# set projection reference
projection(pointsObject) <-
"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
nceas <- raster("../bigFiles/nceas_wgs.tif")
mat4<- c(0, 0, NA, 0.00001, 80, 1) #assign 0 to NA
na.mat4<-matrix(mat4, ncol=3, byrow=TRUE) #transf to matrix
n01<- reclassify(nceas, na.mat4)  #apply to raster to reclassify pixels to NA or 1 to make a mask
n.masked<- mask(nceas, n01, maskvalue=0)
#use r.masked to generate Random Points
# reclass to quantiles
quantile(nceas)
nquants <- c(0,0,0, 0.0001,3.957,1, 3.957,6.99,2,  6.99,9.13,3, 9.13,80, 4)
rcln <- matrix(nquants,ncol=3,byrow=TRUE)
nq <- reclassify(n.masked, rcln) #reclassed to quantiles
?quantile
log.nceas<-log(nceas)
quantile(log.nceas)
